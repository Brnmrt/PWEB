@page "/encomenda/details"
@attribute [Authorize(Roles = "Administrador,Funcionario")]

@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using GestaoLoja.Entities
@inject IDbContextFactory<GestaoLoja.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Detalhes</PageTitle>

<h1>Detalhe da Encomenda</h1>

<div>
    <h2>Encomenda</h2>
    <hr />
    @if (encomenda is null)
    {
        <p><em>Carregando...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@encomenda.UserId</dd>
            <dt class="col-sm-2">Produto</dt>
            <dd class="col-sm-10">@getNomeProdutoById(encomenda.ProdutoId)</dd>
            <dt class="col-sm-2">Quantidade</dt>
            <dd class="col-sm-10">@encomenda.Quantidade</dd>
            <dt class="col-sm-2">Estado</dt>
            <dd class="col-sm-10">@encomenda.Estado</dd>
            <dt class="col-sm-2">Enviada</dt>
            <dd class="col-sm-10">@encomenda.Enviada</dd>
            <dt class="col-sm-2">Estado do pagamento</dt>
            <dd class="col-sm-10">@(encomenda.Paga ? "Paga" : "Nao Paga")</dd>
            <dt class="col-sm-2">Stock</dt>
            <dd class="col-sm-10">@encomenda.EmStock</dd>
        </dl>
       
        <div>
            <a href="@($"/encomenda/edit?id={encomenda.Id}")" class="btn btn-outline-secondary">
                <img title="Editar" src="/img/editicon.png" style="height:30px" />
            </a>
            |
            <a href="@($"/encomenda")" class="btn btn-outline-secondary">
                <img title="Recuar" src="/img/backicon.png" style="height:30px" />
            </a>
        </div>
    }
</div>

@code {
    private Encomenda? encomenda;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        encomenda = await context.Encomendas.FirstOrDefaultAsync(m => m.Id == Id);

        if (encomenda is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private String getNomeProdutoById(int id)
    {
        using var context = DbFactory.CreateDbContext();
        Produto produto = context.Produtos.FirstOrDefault(m => m.Id == id);
        return produto.Nome;    
    }
}
